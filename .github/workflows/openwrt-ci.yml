# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: Compile firmware

on:
  schedule:
    - cron: 0 20 * * 5
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          echo 'src-git helloworld https://github.com/fw876/helloworld' >> ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Costom configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # ========================固件定制部分========================
          #
          cat >> .config <<EOF
          #
          # OpenWrt Configuration
          #

          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          # CONFIG_PACKAGE_antfs-mount is not set
          # CONFIG_PACKAGE_automount is not set
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_frpc=m
          CONFIG_PACKAGE_iptables-mod-ipsec=m
          CONFIG_PACKAGE_kmod-crypto-acompress=m
          CONFIG_PACKAGE_kmod-crypto-cbc=m
          # CONFIG_PACKAGE_kmod-crypto-crc32c is not set
          CONFIG_PACKAGE_kmod-crypto-deflate=m
          CONFIG_PACKAGE_kmod-crypto-des=m
          CONFIG_PACKAGE_kmod-crypto-echainiv=m
          CONFIG_PACKAGE_kmod-crypto-hmac=m
          CONFIG_PACKAGE_kmod-crypto-md5=m
          # CONFIG_PACKAGE_kmod-fs-antfs is not set
          # CONFIG_PACKAGE_kmod-fs-exfat is not set
          # CONFIG_PACKAGE_kmod-fs-ext4 is not set
          CONFIG_PACKAGE_kmod-ipsec=m
          CONFIG_PACKAGE_kmod-ipsec4=m
          CONFIG_PACKAGE_kmod-ipsec6=m
          CONFIG_PACKAGE_kmod-ipt-ipsec=m
          CONFIG_PACKAGE_kmod-iptunnel4=m
          CONFIG_PACKAGE_kmod-iptunnel6=m
          # CONFIG_PACKAGE_kmod-lib-crc16 is not set
          CONFIG_PACKAGE_kmod-lib-zlib-deflate=m
          CONFIG_PACKAGE_kmod-lib-zlib-inflate=m
          CONFIG_PACKAGE_kmod-nf-conntrack-netlink=m
          # CONFIG_PACKAGE_kmod-scsi-core is not set
          CONFIG_PACKAGE_kmod-tun=m
          # CONFIG_PACKAGE_kmod-usb-storage is not set
          # CONFIG_PACKAGE_kmod-usb-storage-extras is not set
          # CONFIG_PACKAGE_kmod-usb-storage-uas is not set
          # CONFIG_PACKAGE_libcap-ng is not set
          CONFIG_PACKAGE_libgmp=m
          CONFIG_PACKAGE_libminiupnpc=m
          CONFIG_PACKAGE_libnatpmp=m
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-arpbind is not set
          CONFIG_PACKAGE_luci-app-autoreboot=m
          CONFIG_PACKAGE_luci-app-ddns=m
          # CONFIG_PACKAGE_luci-app-filetransfer is not set
          CONFIG_PACKAGE_luci-app-frpc=m
          CONFIG_PACKAGE_luci-app-ipsec-vpnd=m
          CONFIG_PACKAGE_luci-app-nlbwmon=m
          CONFIG_PACKAGE_luci-app-ramfree=m
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_fuse-utils is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          # CONFIG_PACKAGE_luci-app-samba is not set
          # CONFIG_PACKAGE_luci-app-upnp is not set
          CONFIG_PACKAGE_luci-app-vlmcsd=m
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          CONFIG_PACKAGE_luci-app-webadmin=m
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          CONFIG_PACKAGE_luci-app-zerotier=m
          CONFIG_PACKAGE_luci-i18n-autoreboot-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ddns-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-frpc-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ipsec-vpnd-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-nlbwmon-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ramfree-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-vlmcsd-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-webadmin-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-zerotier-zh-cn=m
          # CONFIG_PACKAGE_luci-lib-fs is not set
          # CONFIG_PACKAGE_miniupnpd is not set
          CONFIG_PACKAGE_nlbwmon=m
          # CONFIG_PACKAGE_samba36-server is not set
          CONFIG_PACKAGE_strongswan=m
          CONFIG_PACKAGE_strongswan-charon=m
          CONFIG_PACKAGE_strongswan-ipsec=m
          CONFIG_PACKAGE_strongswan-minimal=m
          CONFIG_PACKAGE_strongswan-mod-aes=m
          CONFIG_PACKAGE_strongswan-mod-gmp=m
          CONFIG_PACKAGE_strongswan-mod-hmac=m
          CONFIG_PACKAGE_strongswan-mod-kernel-libipsec=m
          CONFIG_PACKAGE_strongswan-mod-kernel-netlink=m
          CONFIG_PACKAGE_strongswan-mod-nonce=m
          CONFIG_PACKAGE_strongswan-mod-pubkey=m
          CONFIG_PACKAGE_strongswan-mod-random=m
          CONFIG_PACKAGE_strongswan-mod-sha1=m
          CONFIG_PACKAGE_strongswan-mod-socket-default=m
          CONFIG_PACKAGE_strongswan-mod-stroke=m
          CONFIG_PACKAGE_strongswan-mod-updown=m
          CONFIG_PACKAGE_strongswan-mod-x509=m
          CONFIG_PACKAGE_strongswan-mod-xauth-generic=m
          CONFIG_PACKAGE_strongswan-mod-xcbc=m
          CONFIG_PACKAGE_vlmcsd=m
          # CONFIG_PACKAGE_vsftpd-alt is not set
          # CONFIG_PACKAGE_wsdd2 is not set
          CONFIG_PACKAGE_zerotier=m

          EOF

          #
          # ========================固件定制部分结束========================
          #

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

          # 固件配置
          sed -i "8i uci set system.@system[0].hostname=PassStation" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "10i # network config" ./package/lean/default-settings/files/zzz-default-settings
          # 默认 IP 地址，旁路由时不会和主路由的 192.168.1.1 冲突
          sed -i "11i uci set network.lan.ipaddr='192.168.1.5'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "12i uci set network.lan.proto='static'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "13i uci set network.lan.type='bridge'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "14i uci set network.lan.ifname='eth0'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "15i uci set network.lan.netmask='255.255.255.0'" ./package/lean/default-settings/files/zzz-default-settings
          # 主路由 IP 地址
          sed -i "16i uci set network.lan.gateway='192.168.1.1'" ./package/lean/default-settings/files/zzz-default-settings
          # 解析国内网站时，上游 DNS 服务器为主路由器
          sed -i "17i uci set network.lan.dns='192.168.1.1'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "18i uci commit network\n" ./package/lean/default-settings/files/zzz-default-settings

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: x86 PassTheWall Router
          path: ./bin/targets/
  

      - name: Create release
        if: github.event == 'push'
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false      

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
